# version: '3.9'

# services:
#   mysql:
#     image: mysql:8.0
#     container_name: mysql_db
#     environment:
#       MYSQL_ROOT_PASSWORD: Pramsai@123
#       MYSQL_DATABASE: myapp
#     ports:
#       - "3307:3306"
#     volumes:
#       - mysql_data:/var/lib/mysql
#     command: --default-authentication-plugin=mysql_native_password

#   backend:
#     build: ./demo
#     container_name: spring_backend
#     ports:
#       - "8080:8080"
#     environment:
#       SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/myapp
#       SPRING_DATASOURCE_USERNAME: root
#       SPRING_DATASOURCE_PASSWORD: Pramsai@123
#     depends_on:
#       - mysql
#     restart: unless-stopped

#   frontend:
#     build: ./my-auth-app
#     container_name: react_frontend
#     ports:
#       - "3000:80"
#     depends_on:
#       - backend
#     restart: unless-stopped

# volumes:
#   mysql_data:

version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Pramsai@123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # AMQP protocol port
      - "15672:15672"    # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: unless-stopped

  backend:
    build: ./demo
    container_name: spring-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/myapp
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: Pramsai@123
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    depends_on:
      - postgres
      - rabbitmq
    restart: unless-stopped


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - backend
      - rabbitmq

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  kibana:
   image: docker.elastic.co/kibana/kibana:8.10.1
   container_name: kibana
   environment:
    - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
   ports:
    - "5601:5601"
   depends_on:
    - elasticsearch


  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.0
    container_name: logstash
    ports:
      - "5001:5000"  # TCP input for Spring Boot JSON logs
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "4000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
  frontend:
    build: ./my-auth-app
    container_name: react_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  es_data: